{"version":3,"sources":["components/elements/NavBar.js","components/elements/Header.js","components/elements/Footer.js","config.js","components/elements/SearchBar.js","components/elements/MovieThumb-MW.js","components/elements/SixColGrid-MW.js","components/elements/LoadMoreBtn.js","components/elements/Spinner.js","components/Home/Home-MW.js","components/elements/Navigation.js","components/elements/MovieThumb.js","components/elements/MovieInfo.js","helpers.js","components/store/globalAppState.js","images/favourite_icon.png","images/favourite_icon_filled.png","components/elements/FavouriteButton.js","components/elements/MovieInfoBar.js","components/elements/SixColGrid.js","components/elements/Actor.js","components/Movie/Movie.js","components/Upcoming/Upcoming.js","components/NowPlaying/NowPlaying.js","components/TopRated/TopRated.js","components/elements/NotFound.js","components/elements/Favourites-MW.js","components/elements/About.js","components/App/App.js","index.js"],"names":["NavBar","useState","showNav","setShowNav","navItems","to","className","src","alt","title","onClick","openFromRight","onHideNav","items","titleStyle","backgroundColor","height","itemStyle","listStyleType","marginBottom","marginTop","marginLeft","itemHoverStyle","navStyle","width","Header","year","Date","getFullYear","Footer","href","id","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","callback","type","placeholder","onChange","this","Component","MovieThumb","movie","pathname","movieName","name","poster_path","original_title","overview","release_date","vote_average","SixColGrid","movies","header","loading","map","i","renderElements","LoadMoreBtn","text","Spinner","Home","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","catch","error","console","Navigation","clickable","image","movieId","movieOverview","movieRelease","movieRating","MovieInfo","style","background","backdrop_path","directors","length","element","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","getFavs","favsFromStorage","localStorage","getItem","JSON","parse","actions","addFav","store","newFavs","favs","newFavsForStorage","stringify","setItem","removeFav","currentFavs","indexOfMovieToRemove","findIndex","splice","favsForStorage","setFavs","initialState","useGlobal","globalHook","React","FavouriteButton","checkFav","globalState","globalActions","log","some","onMouseDown","e","preventDefault","starFull","starEmpty","defaultProps","MovieInfoBar","runtime","budget","revenue","children","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","location","Upcoming","movieGenre","genres_movie_list","NowPlaying","TopRated","NotFound","Favourites","ready","setReady","useEffect","class","About","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8f4e379.chunk.js","sourcesContent":["// Navigation Bar - Shows the pop out navigation bar (home, favorites, about)\r\n\r\n// With custom items\r\nimport React, { useState } from 'react';\r\nimport SideNav, { MenuIcon } from 'react-simple-sidenav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    const [showNav, setShowNav] = useState();\r\n    const navItems = [\r\n        <Link to={'/'}>\r\n            <div className=\"side-home-button\">\r\n                <div className=\"side-home-logo\">\r\n                    <img src=\"./images/home_button_icon.png\" alt=\"Home Button Icon\" />\r\n                </div>\r\n                <div className=\"side-home-name\">Home</div>\r\n            </div>\r\n        </Link>,\r\n        <Link to={'/favourites'}>\r\n            <div className=\"side-favourites-button\">\r\n                <div className=\"side-favourites-logo\">\r\n                    <img src=\"./images/favourite_icon.png\" alt=\"Favourite Icon\" />\r\n                </div>\r\n                <div className=\"side-favourites-link\">\r\n                    <div className=\"side-favourites-name\">Favourites</div>\r\n                </div>\r\n            </div>\r\n        </Link>,\r\n        <Link to={'/about'}>\r\n            <div className=\"side-about-button\">\r\n                <div className=\"side-about-logo\">\r\n                    <img src=\"./images/about_icon.png\" alt=\"About Icon\" />\r\n                </div>\r\n                <div className=\"side-about-link\">\r\n                    <div className=\"side-about-name\">About</div>\r\n                </div>\r\n            </div>\r\n        </Link>,\r\n    ];\r\n\r\n    const title = <div className=\"nav-bar-logo\">\r\n        <Link to={'/'}><img className=\"side-logo\" src=\"./images/filmdex_logo_2.png\" alt='Movie Database Logo' /></Link>\r\n    </div>\r\n\r\n    return (\r\n        <div className=\"nav-bar-styling\">\r\n            <MenuIcon onClick={() => setShowNav(true)} />\r\n            <SideNav\r\n                openFromRight={true}\r\n                showNav={showNav}\r\n                onHideNav={() => setShowNav(false)}\r\n                title={title}\r\n                items={navItems}\r\n                titleStyle={{\r\n                    backgroundColor: \"#707793\",\r\n                    height: \"180px\",\r\n                }}\r\n                itemStyle={{\r\n                    backgroundColor: '#1f2833',\r\n                    listStyleType: \"none\",\r\n                    marginBottom: \"10px\",\r\n                    marginTop: \"-16px\",\r\n                    marginLeft: \"-40px\",\r\n\r\n                    height: \"80px\"\r\n                }}\r\n                itemHoverStyle={{ backgroundColor: '#707793' }}\r\n                navStyle={{\r\n                    backgroundColor: '#1f2833',\r\n                    width: \"300px\"\r\n                }} />\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default NavBar;","// Header - Shows the header on each page\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBar from '../elements/NavBar';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"movie-site-header\">\r\n      <div className=\"movie-site-header-content\">\r\n        <Link to=\"/\"><img className=\"movie-site-logo\" src=\"./images/filmdex_logo_large.png\" alt=\"React Movie Logo\" /></Link>\r\n        <div className=\"nav-bar-styling\">\r\n          <NavBar />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","// Footer - Shows contact info, social media, and address\r\n\r\nimport React from 'react';\r\n\r\n// Determine the current year\r\nconst d = new Date();\r\nconst year = d.getFullYear();\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer>\r\n            <hr></hr>\r\n            <div className=\"footer-grid\">\r\n\r\n                <div className=\"contact\">\r\n                    <h3>Get in Touch</h3>\r\n                </div>\r\n\r\n                <div className=\"contact-info\">\r\n                    <h5>Email</h5>\r\n                    <p>mbui14@my.bcit.ca<br></br>vnguyen74@my.bcit.ca</p>\r\n                </div>\r\n\r\n                <div className=\"social\">\r\n                    <h5>Social Media</h5>\r\n                    <a href=\"https://www.instagram.com\"><img src=\"./images/instagram-icon.png\" alt=\"Instagram Icon\" id=\"instagram-icon\"></img></a>\r\n                    <a href=\"https://www.facebook.com\"><img src=\"./images/facebook-icon.png\" alt=\"Facebook Icon\" id=\"facebook-icon\"></img></a>\r\n                    <a href=\"https://www.twitter.com\"><img src=\"./images/twitter-icon.png\" alt=\"Twitter Icon\" id=\"twitter-icon\"></img></a>\r\n                </div>\r\n\r\n                <div className=\"location\">\r\n                    <h3>Where We Are</h3>\r\n                </div>\r\n\r\n                <div className=\"address\">\r\n                    <h5>Address</h5>\r\n                    <p>555 Seymour Street<br></br>Vancouver, BC<br></br>V6B 3HP</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"copyright\">\r\n                <p>&copy; {year} Filmdex</p>\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","// Configuration for TMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'd5da7519903c9c59cced4ae0936f005f';\r\n\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500';\r\n\r\n// General App Settings\r\nexport const APP_FOLDER_NAME = '/twd-movie-app';\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE\r\n}","// Search Bar - shows the search bar below the header\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    // Do search method with arrow function\r\n    doSearch = (event) => {\r\n        // Sets the value from the input key \r\n        this.setState({ value: event.target.value })\r\n        // Waits for user to type something\r\n        clearTimeout(this.timeout);\r\n        // Clear old timeout to set a new one\r\n        this.timeout = setTimeout(() => {\r\n            // Getting callback function from props, \r\n            this.props.callback(this.state.value);\r\n        }, 500)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchbar\">\r\n                <div className=\"searchbar-content\">\r\n                    <img src=\"./images/search_icon.png\" alt=\"Search Icon\"></img>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"searchbar-input\"\r\n                        placeholder=\"Search\"\r\n                        // Call back function \r\n                        onChange={this.doSearch}\r\n                        // Grab value from state to place into input field\r\n                        value={this.state.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default SearchBar;","// Movie Thumb - Shows each movie on the homepage\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nconst MovieThumb = ({ movie }) => {\r\n    return (\r\n        <div className=\"moviethumb\">\r\n            <div className=\"movie\">\r\n\r\n                <Link to={{\r\n                    // Grabs the movie id so that it can be grabbed with link to show on URL\r\n                    pathname: `/single-movie/${movie.id}`,\r\n                    // Sends in the movie name to be shown in header\r\n                    movieName: `${movie.name}`\r\n                }}>\r\n\r\n                    {movie.poster_path === null ? <img src=\"./images/no_image.jpg\" /> : <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`} alt={movie.title} />}\r\n                    <div className=\"moviethumb-details\">\r\n                        <div className=\"moviethumb-title\">{movie.original_title}</div>\r\n                        <div className=\"moviethumb-overview\">{movie.overview}</div>\r\n                        <div className=\"moviethumb-release\">[{movie.release_date}]</div>\r\n\r\n                    </div>\r\n                    <div className=\"moviethumb-moreinfo-rating\">\r\n                        <div className=\"moviethumb-moreinfo\">More Info</div>\r\n                        <div className=\"moviethumb-rating\">{movie.vote_average}</div>\r\n                    </div>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieThumb;","// Six Column Grid - create a six column grid (desktop) of movies on the homepage\r\n//                 - 6 on desktop, 4 on tablet, 3 on large phone, 2 on small phone\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import MovieThumb from './MovieThumb';\r\nimport MovieThumb from './MovieThumb-MW';\r\n\r\n\r\n// Create a functional component that will recieve props and that will return a div with the six col grid\r\nconst SixColGrid = ({ movies, header, loading }) => {\r\n\r\n\r\n  const renderElements = (movies) => {\r\n\r\n    return movies.map((movie, i) => {\r\n\r\n      return (\r\n        <div className=\"grid-element\">\r\n          <MovieThumb key={i} movie={movie} />\r\n        </div>\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n  <div className=\"grid-element\"></div>\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n\r\n      {header && !loading ? <h1>{header}</h1> : null}\r\n      <div className=\"grid-content\">\r\n\r\n        {renderElements(movies)}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nSixColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default SixColGrid;","// Load More Button - Shows the \"load more\" button for users to view more movies\r\n\r\nimport React from 'react';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n  return (\r\n\r\n    <div className=\"loadmorebtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadMoreBtn;\r\n","// Spinner animation - Shows spinning animation when user clicks \"load more\"\r\n\r\nimport React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport SearchBar from '../elements/SearchBar';\r\nimport SixColGrid from '../elements/SixColGrid-MW';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner';\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        movies: [], \r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function to Mount/Call API\r\n    */\r\n    // check if component has mounted\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        // Specify API URL (Start by calling the popular movies first)\r\n        // URL first, then API key\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        // send endpoint to the method\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Search \r\n    */\r\n    searchItems = (searchTerm) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            // clear movies and only show what is searched\r\n            movies: [],\r\n            // show loading screen on bottom\r\n            loading: true,\r\n            // sets the searchterm INTO the state\r\n            searchTerm\r\n        })\r\n        // check to see if theres anything in the search term\r\n        if (searchTerm === '') {\r\n            // if not, populate the the movie with popular movies\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            // if so, show the searched movies\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        // use fetchITem to grab the movies\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Loading more Movies \r\n    */\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true });\r\n        if (this.state.searchTerm === '') {\r\n            // will load more popular movies (on home page)\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            // will load more movies on the searched page\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Fetching Data from API and distributing\r\n    */\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            // (then, waits for the result) use json to convert results from the raw data\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                // get data into state\r\n                this.setState({\r\n                    // load new movies while appeneding the movies to the older ones\r\n                    movies: [...this.state.movies, ...result.results],\r\n                    loading: false,\r\n                    currentPage: result.page,\r\n                    totalPages: result.total_pages\r\n                })\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Render Function\r\n    */\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"home\">\r\n\r\n                <div>\r\n                    <SearchBar callback={this.searchItems} />\r\n                </div>\r\n                <div className=\"header-form-select-wrapper\">\r\n                    <div className=\"header-form-select\">\r\n                        <div className=\"form-popular-active\">\r\n                            <Link>Popular</Link>\r\n                        </div>\r\n\r\n                        <div className=\"vertical-form\"></div>\r\n\r\n                        <div className=\"form-top-rated\">\r\n                            <Link to=\"/toprated\">Top Rated</Link>\r\n                        </div>\r\n\r\n                        <div className=\"vertical-form\"></div>\r\n\r\n                        <div className=\"form-upcoming\">\r\n                            <Link to=\"/upcoming\">Upcoming</Link>\r\n                        </div>\r\n\r\n                        <div className=\"vertical-form\"></div>\r\n\r\n                        <div className=\"form-now-playing\">\r\n                            <Link to=\"/nowplaying\">Now Playing</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"home-grid\">\r\n\r\n                    {this.state.movies !== null && <SixColGrid movies={this.state.movies} />}\r\n\r\n\r\n                    {this.state.loading ? <Spinner /> : null}\r\n\r\n                    {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n                        // Ternary to check and see if page is in loading state or not\r\n                        <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","// Navigation - Back button that returns back to home\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// returns back to home\r\nconst Navigation = (movie) => {\r\n  return (\r\n    <div className=\"main-navigation\">\r\n      <div className=\"main-navigation-content\">\r\n        <Link to=\"/\" className=\"nav-back-button\">\r\n          <p> &#5176; Back </p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation;","// Movie Thumb - shows each movie on the homepage\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieThumb = ({ clickable, image, movieId, movieName, movieOverview, movieRelease, movieRating }) => {\r\n    return (\r\n        <div className=\"moviethumb\">\r\n            <div className=\"movie\">\r\n                {clickable ?\r\n                    // ^ Asks if clickable/ then links to pathname that will show up into URL\r\n                    // POSSIBLY CHANGE THIS TO LINK THE THUMBNAIL CLICK TO A NEW PAGE!!!\r\n                    <Link to={{\r\n                        // Grabs the movie id so that it can be grabbed with link to show on URL\r\n                        pathname: `/single-movie/${movieId}`,\r\n                        // Sends in the movie name to be shwon in header\r\n                        movieName: `${movieName}`\r\n                    }}>\r\n\r\n                        <img src={image} alt=\"Movie Poster\" />\r\n                        <div className=\"moviethumb-details\">\r\n                            <div className=\"moviethumb-title\">{movieName}</div>\r\n                            <div className=\"moviethumb-overview\">{movieOverview}</div>\r\n                            <div className=\"moviethumb-release\">[{movieRelease}]</div>\r\n                        </div>\r\n                        <div className=\"moviethumb-moreinfo-rating\">\r\n                            <div className=\"moviethumb-moreinfo\">More Info</div>\r\n                            <div className=\"moviethumb-rating\">{movieRating}</div>\r\n                        </div>\r\n                    </Link>\r\n                    :\r\n                    <img src={image} alt=\"Movie Poster\" />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;","// Movie Info - shows the main movie info (title, overview, rating, etc) on a single movie page\r\n\r\nimport React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport MovieThumb from './MovieThumb';\r\n//import MovieThumb from './MovieThumb-MW';\r\n\r\nconst MovieInfo = (props) => {\r\n  return (\r\n\r\n    <div className=\"movieinfo\"\r\n      style={{\r\n        // Styles and set the background image for the movie page\r\n        background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n      }}\r\n    >\r\n\r\n      <div className=\"movieinfo-content\">\r\n\r\n        <div className=\"movieinfo-thumb\">\r\n          <MovieThumb\r\n            // Places the thumbmnail in the movie for the \"single-movie\" page / not clickable\r\n            image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n            // Not clickable \r\n            clickable={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"movieinfo-text\">\r\n\r\n          <h1>{props.movie.title}</h1>\r\n\r\n          <h3>OVERVIEW</h3>\r\n          <p>{props.movie.overview}</p>\r\n\r\n          <h3>RATING (IMDB)</h3>\r\n          <p className=\"imdb-rating\">{props.movie.vote_average}</p>\r\n\r\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {props.directors.map((element, i) => {\r\n            // Creates a map method to create elements for each director\r\n            return <p key={i} className=\"director\">{element.name}</p>\r\n          })}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfo;","// helper functions to allow us to show movie stats\r\n\r\n// runtime stats\r\n// convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n}\r\n\r\n// budget/ revenue stats\r\n// convert a number to $ format\r\nexport const convertMoney = (money) => {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n}","import React from 'react';\r\nimport globalHook from 'use-global-hook';\r\n\r\nfunction getFavs(){\r\n    let favsFromStorage = localStorage.getItem('movie-app-favs');\r\n    if(favsFromStorage === null){\r\n        favsFromStorage = [];\r\n    }else{\r\n        favsFromStorage = JSON.parse(favsFromStorage);\r\n    }\r\n    return favsFromStorage;\r\n}\r\n\r\nconst actions = {\r\n    addFav: (store, movie) => {\r\n\r\n        const newFavs = [...store.state.favs, movie];\r\n\r\n        const newFavsForStorage = JSON.stringify(newFavs);\r\n        \r\n        localStorage.setItem('movie-app-favs', newFavsForStorage);\r\n        \r\n        store.setState({ favs: newFavs });\r\n\r\n    },\r\n    removeFav: (store, id) => {\r\n\r\n        let currentFavs = store.state.favs;\r\n\r\n        const indexOfMovieToRemove = currentFavs.findIndex((movie) => movie.id === id);\r\n        currentFavs.splice(indexOfMovieToRemove, 1);\r\n    \r\n        let favsForStorage = JSON.stringify(currentFavs);\r\n        localStorage.setItem('movie-app-favs', favsForStorage);\r\n        \r\n        store.setState({ favs: currentFavs });\r\n\r\n    },\r\n    setFavs: (store) => {\r\n        store.setState({ favs: getFavs() })\r\n    } \r\n}\r\n\r\nconst initialState = {\r\n    favs: getFavs()\r\n}\r\n\r\nconst useGlobal = globalHook(React, initialState, actions);\r\n\r\nexport default useGlobal;","export default __webpack_public_path__ + \"static/media/favourite_icon.a44b1c26.png\";","export default __webpack_public_path__ + \"static/media/favourite_icon_filled.774945f7.png\";","// Favourite Button\r\n\r\nimport useGlobal from '../store/globalAppState';\r\nimport starEmpty from '../../images/favourite_icon.png';\r\nimport starFull from '../../images/favourite_icon_filled.png';\r\n\r\nfunction FavouriteButton({ movie, checkFav }) {\r\n\r\n    const [globalState, globalActions] = useGlobal();\r\n\r\n    function isFav(id) {\r\n\r\n        if (globalState.favs.length === 0) {\r\n            return false;\r\n        }\r\n        // Check whether the movie is in the favs movie array\r\n        return globalState.favs.some((movie) => movie.id === id);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"favourite\">\r\n            {console.log(movie)}\r\n            {!checkFav || isFav(movie.id) ?\r\n                <button className=\"btn-favourite\"\r\n                    onMouseDown={(e) => { e.preventDefault(); }}\r\n                    onClick={() => { globalActions.removeFav(movie.id); }}>\r\n                    <img src={starFull} alt=\"Full Star\" />\r\n                </button> :\r\n                <button className=\"btn-favourite\"\r\n                    onMouseDown={(e) => { e.preventDefault(); }}\r\n                    onClick={() => { globalActions.addFav(movie); }}>\r\n                    <img src={starEmpty} alt=\"Empty Star\" />\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nFavouriteButton.defaultProps = {\r\n    checkFav: true\r\n}\r\n\r\nexport default FavouriteButton;","// Movie Info Bar - shows the movie info / statistics / favorites button on a single movie page\r\n\r\nimport React from 'react';\r\nimport { calcTime, convertMoney } from '../../helpers.js';\r\nimport FavouriteButton from './FavouriteButton';\r\n\r\nconst MovieInfoBar = ({ movie, checkFav }) => {\r\n\r\n  return (\r\n    <div className=\"movieinfobar\">\r\n      <div className=\"movieinfobar-content\">\r\n\r\n        <div className=\"movieinfobar-content-col\">\r\n          <span className=\"movieinfobar-info\"><b>Runtime:</b> {calcTime(movie.runtime)}</span>\r\n          <span className=\"movieinfobar-info\"><b>Budget:</b> {convertMoney(movie.budget)}</span>\r\n          <span className=\"movieinfobar-info\"><b>Revenue:</b> {convertMoney(movie.revenue)}</span>\r\n        </div>\r\n\r\n        <div className=\"movieinfobar-content-col\">\r\n          <div className=\"movieinfobar-favourites\">\r\n            <FavouriteButton movie={movie} checkFav={checkFav} />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfoBar;","// Six Column Grid - create a six column grid (desktop) of movies on the homepage\r\n//                 - 6 on desktop, 4 on tablet, 3 on large phone, 2 on small phone\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Create a functional component that will recieve props and that will return a div with the six col grid\r\nconst SixColGrid = (props) => {\r\n\r\n  // Const to send in thumbnail \r\n  const renderElements = () => {\r\n    // Grabs children from predefined props taht is sent in from home \r\n\r\n    const gridElements = props.children.map((element, i) => {\r\n      return (\r\n        // looping thru children  \r\n        <div key={i} className=\"grid-element\">\r\n\r\n          {element}\r\n        </div>\r\n      )\r\n    })\r\n    return gridElements;\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"grid-content\">\r\n\r\n        {renderElements()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSixColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default SixColGrid;","// Actors Page - Shows a list of all actors and their roles who participated in the movie\r\n\r\nimport React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../config';\r\n\r\nconst Actor = (props) => {\r\n\r\n    // Determine size of actor's image on a single movie page\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"actor\">\r\n            <img src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.actor.profile_path}` : './images/no_image.jpg'} alt=\"Actor Headshot\" />\r\n            <span className=\"actor-name\">{props.actor.name}</span>\r\n            <span className=\"actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar';\r\nimport SixColGrid from '../elements/SixColGrid';\r\nimport Actor from '../elements/Actor';\r\nimport Spinner from '../elements/Spinner';\r\n\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    // lifecyle method \r\n    componentDidMount() {\r\n        if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n            const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n            this.setState({ ...state });\r\n        } else {\r\n            //\r\n            this.setState({ loading: true })\r\n            // First fetch the movie...\r\n            // fetches the movie variable that is created \r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n            // it then fetches the items to endpoint\r\n            this.fetchItems(endpoint);\r\n        }\r\n    }\r\n    // method for fetch items with uses endpoint as the parameter\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            // get results from^ fetch endpoint, so convert results using json\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                // does a check to make sure that if the API doesnt return anything  \r\n                if (result.status_code) {\r\n                    this.setState({ loading: false });\r\n                    // means nothing is loading...^^^\r\n                } else {\r\n                    // fill the movie state WITH the reuslt FOR the movie\r\n                    this.setState({ movie: result }, () => {\r\n                        // ... then fetch actors in the setState callback function\r\n                        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n                        // ^ new endpoint\r\n                        fetch(endpoint)\r\n                            .then(result => result.json())\r\n                            .then(result => {\r\n                                // used to fetch the directors \r\n                                // the above code already found the results, \r\n                                // now we much FILTER to get only the director data info (crew/jobs are predefined properties formt he API)\r\n                                const directors = result.crew.filter((member) => member.job === \"Director\");\r\n                                \r\n                                // set the state again!\r\n                                this.setState({\r\n                                    actors: result.cast,\r\n                                    directors,\r\n                                    loading: false\r\n                                }, () => {\r\n                                    localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n                                })\r\n                            })\r\n                    })\r\n                }\r\n            })\r\n            // catches to see if any errors present.\r\n            .catch(error => console.error('Error:', error))\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"movie\">\r\n                {this.state.movie ?\r\n                    <div>\r\n                        <Navigation \r\n                            movie={this.props.location.movieName} \r\n                        />\r\n                        <MovieInfo \r\n                            movie={this.state.movie} \r\n                            directors={this.state.directors} \r\n                        />\r\n                        <MovieInfoBar \r\n                            movie = {this.state.movie}\r\n                           \r\n                        />\r\n                    </div>\r\n                : null}\r\n                {this.state.actors ?\r\n                    <div className=\"movie-grid\">\r\n                        <SixColGrid header={'Actors'}>\r\n                            {this.state.actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </SixColGrid>\r\n                    </div>\r\n                : null}\r\n\r\n                {!this.state.actors && !this.state.loading ? <h1>Sorry, no movie was found.</h1> : null}\r\n                {this.state.loading ? <Spinner /> : null}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport SearchBar from '../elements/SearchBar';\r\nimport SixColGrid from '../elements/SixColGrid';\r\nimport MovieThumb from '../elements/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner';\r\n\r\nclass Upcoming extends Component {\r\n    state = {\r\n        movies: [],\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function to Mount/Call API\r\n    */\r\n    // check if component has mounted\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        // Specify API URL (Start by calling the popular movies first)\r\n        // URL first, then API key\r\n        const endpoint = `${API_URL}movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`;\r\n        // send endpoint to the method\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Search \r\n    */\r\n    searchItems = (searchTerm) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            // clear movies and only show what is searched\r\n            movies: [],\r\n            // show loading screen on bottom\r\n            loading: true,\r\n            // sets the searchterm INTO the state\r\n            searchTerm\r\n        })\r\n        // check to see if theres anything in the search term\r\n        if (searchTerm === '') {\r\n            // if not, populate the the movie with popular movies\r\n            endpoint = `${API_URL}movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            // if so, show the searched movies\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        // use fetchITem to grab the movies\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Loading more Movies \r\n    */\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true });\r\n        if (this.state.searchTerm === '') {\r\n            // will load more popular movies (on home page)\r\n            endpoint = `${API_URL}movie/upcoming?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            // will load more movies on the searched page\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Fetching Data from API and distributing\r\n    */\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            // (then, waits for the result) use json to convert results from the raw data\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                // get data into state\r\n                this.setState({\r\n                    // load new movies while appeneding the movies to the older ones\r\n                    movies: [...this.state.movies, ...result.results],\r\n                    loading: false,\r\n                    currentPage: result.page,\r\n                    totalPages: result.total_pages\r\n                })\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Render Function\r\n    */\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n\r\n                <div>\r\n                    <SearchBar callback={this.searchItems} />\r\n                </div>\r\n\r\n                <div className=\"header-form-select\">\r\n                    <div className=\"form-popular\">\r\n                        <Link to=\"/\">Popular</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-top-rated\">\r\n                        <Link to=\"/toprated\">Top Rated</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-upcoming-active\">\r\n                        <Link to=\"/upcoming\">Upcoming</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-now-playing\">\r\n                        <Link to=\"/nowplaying\">Now Playing</Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"home-grid\">\r\n                    <SixColGrid\r\n                        loading={this.state.loading}\r\n                    >\r\n\r\n                        {this.state.movies.map((element, i) => {\r\n                            // returns the movie thumb with it's props\r\n                            return <MovieThumb\r\n                                key={i}\r\n                                // allows user to click on thumbnail\r\n                                clickable={true}\r\n                                //checks the image poster path. TERNARY, if there are no image, go to fall back image (no image.png)\r\n                                image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                // start of using the link\r\n                                movieId={element.id}\r\n                                movieName={element.original_title}\r\n                                movieRating={element.vote_average}\r\n                                movieRelease={element.release_date}\r\n                                movieOverview={element.overview}\r\n                                movieGenre={element.genres_movie_list}\r\n                            />\r\n                        })}\r\n                    </SixColGrid>\r\n\r\n                    {this.state.loading ? <Spinner /> : null}\r\n\r\n                    {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n                        // Ternary to check and see if page is in loading state or not\r\n                        <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Upcoming;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n//import { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport SearchBar from '../elements/SearchBar';\r\nimport SixColGrid from '../elements/SixColGrid';\r\nimport MovieThumb from '../elements/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner';\r\n\r\nclass NowPlaying extends Component {\r\n    state = {\r\n        movies: [],\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function to Mount/Call API\r\n    */\r\n    // check if component has mounted\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        // Specify API URL (Start by calling the popular movies first)\r\n        // URL first, then API key\r\n        const endpoint = `${API_URL}movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\r\n        // send endpoint to the method\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Search \r\n    */\r\n    searchItems = (searchTerm) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            // clear movies and only show what is searched\r\n            movies: [],\r\n            // show loading screen on bottom\r\n            loading: true,\r\n            // sets the searchterm INTO the state\r\n            searchTerm\r\n        })\r\n        // check to see if theres anything in the search term\r\n        if (searchTerm === '') {\r\n            // if not, populate the the movie with popular movies\r\n            endpoint = `${API_URL}movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            // if so, show the searched movies\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        // use fetchITem to grab the movies\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Loading more Movies \r\n    */\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true });\r\n        if (this.state.searchTerm === '') {\r\n            // will load more popular movies (on home page)\r\n            endpoint = `${API_URL}movie/now_playing?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            // will load more movies on the searched page\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Fetching Data from API and distributing\r\n    */\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            // (then, waits for the result) use json to convert results from the raw data\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                // get data into state\r\n                this.setState({\r\n                    // load new movies while appeneding the movies to the older ones\r\n                    movies: [...this.state.movies, ...result.results],\r\n                    loading: false,\r\n                    currentPage: result.page,\r\n                    totalPages: result.total_pages\r\n                })\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Render Function\r\n    */\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div>\r\n                    <SearchBar callback={this.searchItems} />\r\n                </div>\r\n\r\n                <div className=\"header-form-select\">\r\n                    <div className=\"form-popular\">\r\n                        <Link to=\"/\">Popular</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-top-rated\">\r\n                        <Link to=\"/toprated\">Top Rated</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-upcoming\">\r\n                        <Link to=\"/upcoming\">Upcoming</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-now-playing-active\">\r\n                        <Link to=\"/nowplaying\">Now Playing</Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"home-grid\">\r\n                    <SixColGrid\r\n                        loading={this.state.loading}\r\n                    >\r\n\r\n                        {this.state.movies.map((element, i) => {\r\n                            // returns the movie thumb with it's props\r\n                            return <MovieThumb\r\n                                key={i}\r\n                                // allows user to click on thumbnail\r\n                                clickable={true}\r\n                                //checks the image poster path. TERNARY, if there are no image, go to fall back image (no image.png)\r\n                                image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                // start of using the link\r\n                                movieId={element.id}\r\n                                movieName={element.original_title}\r\n                                movieRating={element.vote_average}\r\n                                movieRelease={element.release_date}\r\n                                movieOverview={element.overview}\r\n                                movieGenre={element.genres_movie_list}\r\n                            />\r\n                        })}\r\n                    </SixColGrid>\r\n\r\n                    {this.state.loading ? <Spinner /> : null}\r\n\r\n                    {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n                        // Ternary to check and see if page is in loading state or not\r\n                        <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NowPlaying;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport SearchBar from '../elements/SearchBar';\r\nimport SixColGrid from '../elements/SixColGrid';\r\nimport MovieThumb from '../elements/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner';\r\n\r\nclass TopRated extends Component {\r\n    state = {\r\n        movies: [],\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function to Mount/Call API\r\n    */\r\n    // check if component has mounted\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        // Specify API URL (Start by calling the popular movies first)\r\n        // URL first, then API key\r\n        const endpoint = `${API_URL}movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`;\r\n        // send endpoint to the method\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Search \r\n    */\r\n    searchItems = (searchTerm) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            // clear movies and only show what is searched\r\n            movies: [],\r\n            // show loading screen on bottom\r\n            loading: true,\r\n            // sets the searchterm INTO the state\r\n            searchTerm\r\n        })\r\n        // check to see if theres anything in the search term\r\n        if (searchTerm === '') {\r\n            // if not, populate the the movie with popular movies\r\n            endpoint = `${API_URL}movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            // if so, show the searched movies\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        // use fetchITem to grab the movies\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Loading more Movies \r\n    */\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true });\r\n        if (this.state.searchTerm === '') {\r\n            // will load more popular movies (on home page)\r\n            endpoint = `${API_URL}movie/top_rated?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            // will load more movies on the searched page\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Function for Fetching Data from API and distributing\r\n    */\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            // (then, waits for the result) use json to convert results from the raw data\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                // get data into state\r\n                this.setState({\r\n                    // load new movies while appeneding the movies to the older ones\r\n                    movies: [...this.state.movies, ...result.results],\r\n                    loading: false,\r\n                    currentPage: result.page,\r\n                    totalPages: result.total_pages\r\n                })\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    /*\r\n    ==========================================================================================================================================\r\n    Render Function\r\n    */\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n\r\n                <div>\r\n                    <SearchBar callback={this.searchItems} />\r\n                </div>\r\n\r\n                <div className=\"header-form-select\">\r\n                    <div className=\"form-popular-active\">\r\n                        <Link to=\"/\">Popular</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-top-rated-active\">\r\n                        <Link to=\"/toprated\">Top Rated</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-upcoming\">\r\n                        <Link to=\"/upcoming\">Upcoming</Link>\r\n                    </div>\r\n\r\n                    <div className=\"vertical-form\"></div>\r\n\r\n                    <div className=\"form-now-playing\">\r\n                        <Link to=\"/nowplaying\">Now Playing</Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"home-grid\">\r\n                    <SixColGrid\r\n                        loading={this.state.loading}\r\n                    >\r\n\r\n                        {this.state.movies.map((element, i) => {\r\n                            // returns the movie thumb with it's props\r\n                            return <MovieThumb\r\n                                key={i}\r\n                                // allows user to click on thumbnail\r\n                                clickable={true}\r\n                                //checks the image poster path. TERNARY, if there are no image, go to fall back image (no image.png)\r\n                                image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                // start of using the link\r\n                                movieId={element.id}\r\n                                movieName={element.original_title}\r\n                                movieRating={element.vote_average}\r\n                                movieRelease={element.release_date}\r\n                                movieOverview={element.overview}\r\n                                movieGenre={element.genres_movie_list}\r\n                            />\r\n                        })}\r\n                    </SixColGrid>\r\n\r\n                    {this.state.loading ? <Spinner /> : null}\r\n\r\n                    {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n                        // Ternary to check and see if page is in loading state or not\r\n                        <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopRated;\r\n","// Not Found Page - shows error page if page doesn't exist\r\n\r\nimport React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Sorry, that page doesn't exist!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound;\r\n","// Favourites\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useGlobal from '../store/globalAppState';\r\nimport SixColGrid from './SixColGrid-MW';\r\n\r\nconst Favourites = () => {\r\n\r\n  const [globalState, globalActions] = useGlobal();\r\n\r\n  const [ready, setReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    globalActions.setFavs();\r\n    setReady(true);\r\n  }, [globalActions]);\r\n\r\n  return (\r\n    <section class=\"favourites-section\">\r\n\r\n      <Link to={'/'} className=\"go-back\">&#5176; Back</Link>\r\n\r\n      <h2>Favourite Movies</h2>\r\n\r\n      {globalState.favs.length === 0 ?\r\n        <div className=\"fave-movies-text\">\r\n          <div className=\"favourite-tutorial-icons\">\r\n            <img src=\"./images/add icon.png\" alt=\"Add Icon\" className=\"favourite_icon\"></img>\r\n            <img src=\"./images/arrow_icon.png\" alt=\"Arrow Icon\" className=\"favourite_icon\"></img>\r\n            <img src=\"./images/favourite_icon.png\" alt=\"Favourite Icon\" className=\"favourite_icon\"></img>\r\n          </div>\r\n          <p>Uh-oh, looks like you haven't chosen any movies yet!</p>\r\n          <p>Feel free to return back to the home page and explore more movies!</p>\r\n          <p>To add a favourite movie on the home page, you can click on the <img src=\"./images/favourite_icon.png\" alt=\"Favourite Icon\" className=\"favourite_icon\"></img> while hovering or by clicking on the movie poster.</p>\r\n          <p>You can also find the <img src=\"./images/favourite_icon.png\" alt=\"Favourite Icon\" className=\"favourite_icon\"></img> when you click on an individual movie to learn more or watch a trailer.</p>\r\n        </div>\r\n        :\r\n        (ready &&\r\n          <div className=\"home-grid\">\r\n            <SixColGrid movies={globalState.favs} />\r\n          </div>\r\n        )\r\n      }\r\n\r\n    </section>\r\n\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n","// About\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst About = () => (\r\n\r\n  <section className=\"about-section\">\r\n\r\n    <Link to={'/'} className=\"go-back\">&#5176; Back</Link>\r\n\r\n    <h2>About Filmdex</h2>\r\n    <div className=\"about-section-wrapper\">\r\n      <p><b>Filmdex</b> is a movie database site hoping to satisfy the cinema needs of movie\r\n        buffs. Whether you are planning to watch a new upcoming release, or want to\r\n        learn more about solid block-buster classics, Filmdex aims to provide a\r\n        beautiful and seamless experience for all.<br></br>\r\n        Please feel free to browse through our selections. If there are any movies that\r\n        interest you, go ahead and add them to your Favorites.</p>\r\n    </div>\r\n\r\n    <div class=\"tmdb-logo\">\r\n      <a href=\"https://www.themoviedb.org/documentation/api\"><img src=\"./images/tmdb-logo.png\" alt=\"TMDB Logo\" className=\"no-hover\"></img></a>\r\n    </div>\r\n    <div className=\"about-section-wrapper\">\r\n      <p>This web application uses the <a href=\"https://www.themoviedb.org/documentation/api\">TMDb API</a> but is not endorsed or certified by TMDb. <br></br> For educational purposes only.</p>\r\n    </div>\r\n\r\n    <h3>About the Team</h3>\r\n    <div className=\"about-section-wrapper\">\r\n      <p>Created by <a href=\"https://mbui.bcitwebdeveloper.ca/\">Mina Bui</a> and <a href=\"https://vnguyen.bcitwebdeveloper.ca/\">Vinson Nguyen</a>. Made for the BCIT <a href=\"https://bcitwebdeveloper.ca/\">Technical Web Designer</a> Program.</p>\r\n    </div>\r\n\r\n  </section>\r\n\r\n);\r\n\r\nexport default About; ","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header';\r\nimport Footer from '../elements/Footer';\r\nimport Home from '../Home/Home-MW';\r\nimport Movie from '../Movie/Movie';\r\nimport Upcoming from '../Upcoming/Upcoming';\r\nimport NowPlaying from '../NowPlaying/NowPlaying';\r\nimport TopRated from '../TopRated/TopRated';\r\nimport NotFound from '../elements/NotFound';\r\nimport Favourites from '../elements/Favourites-MW';\r\nimport About from '../elements/About'\r\nimport { APP_FOLDER_NAME } from '../../config';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <BrowserRouter basename={APP_FOLDER_NAME}>\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/single-movie/:movieId\" component={Movie} />\r\n          <Route path=\"/NowPlaying\" component={NowPlaying} />\r\n          <Route path=\"/TopRated\" component={TopRated} />\r\n          <Route path=\"/Upcoming\" component={Upcoming} />\r\n          <Route path={'/about'}><About /></Route>\r\n          <Route path={'/favourites'}><Favourites /></Route>\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n        <Footer></Footer>\r\n      </React.Fragment>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './styles/styles.scss';\r\n\r\n// specifies what we want to render and where we want to render it\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}